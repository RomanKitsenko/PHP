1. Как правильно настроить форму для отправки данных в обработчик? Какие атрибуты прописать, какие значения?
- Нужно прописать путь(action) до обработчика, метод в теге Form. Далее name у инпутов и submit на отправку формы

2. Что такое обработчик? Какую задачу он решает? А зачем выделять его в отдельный файл? В чем польза такого подхода?
Обработчик это файл с правилами обработки данных, приходящих из форм. Удобно читать код, когда каждый файл решает свою задачу и
тем более на этот файл происходит автоматическая переадресация через action.

3. Какие методы бывают отправки данных через форму? В чем их разница? В каком случае использовать один, а когда другой?
Метод GET виден пользователям и удобно им пользоваться для открытых данных (пагинация, корзина) и т.д.
Метод POST не виден пользователям и идеален для отправки приватных данных

4. Опишите процесс записи строки в базу данных: как подключиться, подготовить запрос и выполнить
Подключаемся к БД, формируем SQL запрос, подготавливаем его (->prepare()), и потом запускаем подготовленный запрос ->execute().

5. Какой глобальный массив используется при создании флеш-сообщений?
$_SESSION

6. Опишите пошагово как создать и вывести флеш-сообщение
Сначала стартуем сессию, потом сохраняем нужную строку в сессию.
$_SESSION['message'] = "ваше сообщение";
Для вывода на другой странице нужно снова запустить session_start();

7. Как проверить текст на формат эл. адреса средствами php?
Либо встроенная функция - filter_var($email, FILTER_VALIDATE_EMAIL), либо регалярные выражения

8. Какие функции используются для генерации пароля и его проверку?
$hash = password_hash('123456', PASSWORD_DEFAULT); - используется для генерации
password_verify('123456', $hash) - для проверки

9. Почему важно сохранять пароль в виде хэша? Почему не рекомендуется хранить пароль в открытом виде?
При потере данных из базы, хешированные пароли окажутся бесполезными, что нам и нужно

10. Напишите какая есть особенность у веб-сервера которую покрывает Сессия? Иными словами, зачем нужна Сессия?
Сессия хранит данные пользователя на сервере во время использования всего сайта, а не только отдельных страниц.
Сессия позволяет сохранять различные состояния пользователя между переходами по страницам, запросами и т.д.

11. Опишите пошагово реализацию функционала Аутентификации(входа в систему).
Отправляем данные пользователя через метод POST в обработчик.
В обработчике стартуем сессию, подключаемся к базе, сверяем логин и пароль, если не совпали -
записываем в сессию отказ в доступе и переходим назад с сообщением отказа.
Если логин совпал, проверяем пароль с помощью verify, если все ок, записываем в сессию "ОК" возвращаем пользователя на нужную страницу

12. Какая есть особенность настройки формы для загрузки файлов?
в форме необходимо прописать несколько атрибут enctype="multipart/form-data",
и создать инпут с MAX_FilE_SIZE <input type="hidden" name="MAX_FILE_SIZE" value="500000">
В остальном отличий нет

13. Какое значение должно быть у инпута для множественной загрузки файлов?
 инпуту нужно задать значение multiple
 и в атрибуте name указать запись данных в массив - name="image[]"

14. Как создать уникальное название файла?
С помощью функции uniqueid()

15. Напишите названия функций для загрузки файла, проверки существует ли файл в папке, удаления файла
1) move_uploaded_file($from, $to)
2) is_uploaded_file($filename) - имя файла на сервере (tmp_name)
3) unlink($filepath) - удаление файлов с локалки или сервера

16. Какой глобальный массив хранит все файлы передаваемые через форму?
$_FILES

17. Опишите структуру глобального массива хранящего файлы: какие имеет ключи и значения
name = [
	[name] => img.jpg
	[type] => image/jpeg
	[tmp_name] => /home/user/temp/phpjX2YXo
	[error] => 0
	[size] => 123123123
]
1) Имя файла
2) Тип файла
3) путь к файлу на сервере
4) ошибка при загрузке, 0 - ошибок нет
5) Размер файла

18. Помогите человеку решить задачу. «Пользователь загрузил файл и нажимает отправить.
Он ожидает, что файл сохранится в папку, а название в базу. Файл сохраняется в папку, но в базу название не сохраняется»
В чем может быть ошибка?

Сохранение в базу и в папку - это 2 разные задачи. Поэтому тут может быть любая ошибка связи с БД
либо что-то не так прописано в обработчике.

19. Помогите человеку решить задачу. «Создал массив элементов, и хочу вывести при помощи цикла.
Вроде бы все написал, но выходит ошибка: illegal offset type» Что нужно сделать, чтобы решить эту проблему?
Это ошибка - "недопустимый тип", нужно искать в первую очередь в ключах, если, допустим, передать ключу вместо строки объект или массив.

20. Что означает эта ошибка. «Parse error Unexpected (, expected ;» Что нужно сделать, чтобы избавить от ошибки?
Php ожидает двоеточие, где-то прропустили

21. Помогите человеку решить задачу. «Создал форму с инпутом. Пишу текст и отправляю.
В обработчике $_POST пустой» В чем может быть ошибка?
В первую очередь смотрел бы, указаны атрибуты name или прописан ли type='submit' на кнопке

22. Чем технически отличается глобальный массив от обычного массива?
Глобальный массив технически не отличается от обычного

23. Дайте человеку совет. Он говорит: «Когда я пишу код, я не обращаю внимания на названия переменных, функций и массивов.
Для меня все и так понятно. Поэтому я даю короткие названия, типа $a, $b, $smth.
Но потом, понимаю, что мне тяжело ориентироваться в них»
Нейминг эта важная часть архитектуры проекта, в названиях нужно отображать что это за переменная, функция и т.д.
Либо сам через время сядешь за этот проект, либо новый человек заглянет и обоим придется продираться сквозь $array, $data, $a и т.д.
Эти названия не расскажут ничего о том что внутри, что за действие, и к какой области относится. Еще это важно, если проект разрастется
и через время и несколько сотен, а то и тысяч использований какого-нибудь массива $data - изменить это будет очень проблематично.
А изменить захочется 100%.

24. Дайте человеку совет. Он говорит: «Хочу самостоятельно написать регистрацию и авторизацию.
Приступаю и у меня ступор: не знаю с чего начать. Вроде бы понимаю, что регистрация — это добавление пользователя в базу,
но не понимаю с чего начинать?»
Для начала нужно расписать псевдокодом или просто текстом какие задачи стоят перед сервером и клиентом, не забыв обо всех мелочах.
А потом их разместить в нужном порядке.

25. Объясните человеку в чем разница между $_SESSION и $_COOKIE: «Не пойму в чем разница между сессией и куки?
Вроде бы одно и то же…пока полностью не осознал.»
Сессии и Куки нужны для хванения данных о пользователе. Эти данные сохраняются при переходе между страниц сайта.
в Сессии данные хранятся на сервере, а Куки хранятся у клиента в браузере.
Когда мы прописываем session_start() либо создастся новая сессия, либо мы получим id существующей сессии и ее данные.
А если нам нужно оставить у клиента какие-то данные ключ-значение, то мы устанавливаем Куки.
К примеру id Сессии запоминаем при помощи Cookie - Set-Cookie: PHPSESSID=123123.

26. Дайте человеку совет. Он говорит: «Скачал кучу курсов. По одним названиям можно понять, что я скоро точно стану программистом.
Но сколько бы я не смотрел, у меня не получается самостоятельно написать даже простенький скрипт.
Что я делаю не так? Как надо подходить к обучению?»
Чтобы писать код самостоятельно, нужно понимать что именно писать для решения конкретной задачи. Т.е. из каких этапов состоит
любая, даже самая маленькая задача. Идеальный вариант, когда есть кто-то, кто проверит туда ты идешь или нет.
Это съэкономит тонну времени.

27. Какие у вас впечатления от первой части практики?
Пришло понимание, что любой проект состоит из набора компонентов, и охватить сразу это невозможно.
Но двигаясь постепенно приходит понимание зачем нужно то, зачем это.
Не хватило понимания как двигаться по курсу, а именно описания что где-то гуглим, где-то возвращаемся в теорию,
которая есть в разделе "Теория". Было бы удобно иметь краткое содержание внутри страницы урока, которое будет всегда на одном месте.
Иногда в уроках есть текст, иногда текст с видео, а иногда просто видео и не понятно цели урока, задачи, доп материалы.
Было бы удобнее, но те кто хотят разобраться, разберуться и так.
